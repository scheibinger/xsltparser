/* This file was generated by SableCC (http://www.sablecc.org/). */

package xslt.node;

import xslt.analysis.*;

@SuppressWarnings("nls")
public final class AFile extends PFile
{
    private PHeader _header_;
    private PDocument _document_;
    private PFooter _footer_;

    public AFile()
    {
        // Constructor
    }

    public AFile(
        @SuppressWarnings("hiding") PHeader _header_,
        @SuppressWarnings("hiding") PDocument _document_,
        @SuppressWarnings("hiding") PFooter _footer_)
    {
        // Constructor
        setHeader(_header_);

        setDocument(_document_);

        setFooter(_footer_);

    }

    @Override
    public Object clone()
    {
        return new AFile(
            cloneNode(this._header_),
            cloneNode(this._document_),
            cloneNode(this._footer_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFile(this);
    }

    public PHeader getHeader()
    {
        return this._header_;
    }

    public void setHeader(PHeader node)
    {
        if(this._header_ != null)
        {
            this._header_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._header_ = node;
    }

    public PDocument getDocument()
    {
        return this._document_;
    }

    public void setDocument(PDocument node)
    {
        if(this._document_ != null)
        {
            this._document_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._document_ = node;
    }

    public PFooter getFooter()
    {
        return this._footer_;
    }

    public void setFooter(PFooter node)
    {
        if(this._footer_ != null)
        {
            this._footer_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._footer_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._header_)
            + toString(this._document_)
            + toString(this._footer_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._header_ == child)
        {
            this._header_ = null;
            return;
        }

        if(this._document_ == child)
        {
            this._document_ = null;
            return;
        }

        if(this._footer_ == child)
        {
            this._footer_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._header_ == oldChild)
        {
            setHeader((PHeader) newChild);
            return;
        }

        if(this._document_ == oldChild)
        {
            setDocument((PDocument) newChild);
            return;
        }

        if(this._footer_ == oldChild)
        {
            setFooter((PFooter) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
