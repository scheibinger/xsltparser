/* This file was generated by SableCC (http://www.sablecc.org/). */

package xslt.node;

import xslt.analysis.*;

@SuppressWarnings("nls")
public final class AApplyTemplatesTemplateContent extends PTemplateContent
{
    private TXsltTag _xsltTag_;
    private TApplyTemplates _open_;
    private PApplyTemplatesOptions _applyTemplatesOptions_;
    private TCloseTag _closeApplyTemplates_;
    private PApplyTemplatesParameters _applyTemplatesParameters_;
    private TCloseXsltTag _closeXsltTag_;
    private TApplyTemplates _close_;
    private TCloseTag _closeXslt_;

    public AApplyTemplatesTemplateContent()
    {
        // Constructor
    }

    public AApplyTemplatesTemplateContent(
        @SuppressWarnings("hiding") TXsltTag _xsltTag_,
        @SuppressWarnings("hiding") TApplyTemplates _open_,
        @SuppressWarnings("hiding") PApplyTemplatesOptions _applyTemplatesOptions_,
        @SuppressWarnings("hiding") TCloseTag _closeApplyTemplates_,
        @SuppressWarnings("hiding") PApplyTemplatesParameters _applyTemplatesParameters_,
        @SuppressWarnings("hiding") TCloseXsltTag _closeXsltTag_,
        @SuppressWarnings("hiding") TApplyTemplates _close_,
        @SuppressWarnings("hiding") TCloseTag _closeXslt_)
    {
        // Constructor
        setXsltTag(_xsltTag_);

        setOpen(_open_);

        setApplyTemplatesOptions(_applyTemplatesOptions_);

        setCloseApplyTemplates(_closeApplyTemplates_);

        setApplyTemplatesParameters(_applyTemplatesParameters_);

        setCloseXsltTag(_closeXsltTag_);

        setClose(_close_);

        setCloseXslt(_closeXslt_);

    }

    @Override
    public Object clone()
    {
        return new AApplyTemplatesTemplateContent(
            cloneNode(this._xsltTag_),
            cloneNode(this._open_),
            cloneNode(this._applyTemplatesOptions_),
            cloneNode(this._closeApplyTemplates_),
            cloneNode(this._applyTemplatesParameters_),
            cloneNode(this._closeXsltTag_),
            cloneNode(this._close_),
            cloneNode(this._closeXslt_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAApplyTemplatesTemplateContent(this);
    }

    public TXsltTag getXsltTag()
    {
        return this._xsltTag_;
    }

    public void setXsltTag(TXsltTag node)
    {
        if(this._xsltTag_ != null)
        {
            this._xsltTag_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xsltTag_ = node;
    }

    public TApplyTemplates getOpen()
    {
        return this._open_;
    }

    public void setOpen(TApplyTemplates node)
    {
        if(this._open_ != null)
        {
            this._open_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._open_ = node;
    }

    public PApplyTemplatesOptions getApplyTemplatesOptions()
    {
        return this._applyTemplatesOptions_;
    }

    public void setApplyTemplatesOptions(PApplyTemplatesOptions node)
    {
        if(this._applyTemplatesOptions_ != null)
        {
            this._applyTemplatesOptions_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._applyTemplatesOptions_ = node;
    }

    public TCloseTag getCloseApplyTemplates()
    {
        return this._closeApplyTemplates_;
    }

    public void setCloseApplyTemplates(TCloseTag node)
    {
        if(this._closeApplyTemplates_ != null)
        {
            this._closeApplyTemplates_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._closeApplyTemplates_ = node;
    }

    public PApplyTemplatesParameters getApplyTemplatesParameters()
    {
        return this._applyTemplatesParameters_;
    }

    public void setApplyTemplatesParameters(PApplyTemplatesParameters node)
    {
        if(this._applyTemplatesParameters_ != null)
        {
            this._applyTemplatesParameters_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._applyTemplatesParameters_ = node;
    }

    public TCloseXsltTag getCloseXsltTag()
    {
        return this._closeXsltTag_;
    }

    public void setCloseXsltTag(TCloseXsltTag node)
    {
        if(this._closeXsltTag_ != null)
        {
            this._closeXsltTag_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._closeXsltTag_ = node;
    }

    public TApplyTemplates getClose()
    {
        return this._close_;
    }

    public void setClose(TApplyTemplates node)
    {
        if(this._close_ != null)
        {
            this._close_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._close_ = node;
    }

    public TCloseTag getCloseXslt()
    {
        return this._closeXslt_;
    }

    public void setCloseXslt(TCloseTag node)
    {
        if(this._closeXslt_ != null)
        {
            this._closeXslt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._closeXslt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._xsltTag_)
            + toString(this._open_)
            + toString(this._applyTemplatesOptions_)
            + toString(this._closeApplyTemplates_)
            + toString(this._applyTemplatesParameters_)
            + toString(this._closeXsltTag_)
            + toString(this._close_)
            + toString(this._closeXslt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._xsltTag_ == child)
        {
            this._xsltTag_ = null;
            return;
        }

        if(this._open_ == child)
        {
            this._open_ = null;
            return;
        }

        if(this._applyTemplatesOptions_ == child)
        {
            this._applyTemplatesOptions_ = null;
            return;
        }

        if(this._closeApplyTemplates_ == child)
        {
            this._closeApplyTemplates_ = null;
            return;
        }

        if(this._applyTemplatesParameters_ == child)
        {
            this._applyTemplatesParameters_ = null;
            return;
        }

        if(this._closeXsltTag_ == child)
        {
            this._closeXsltTag_ = null;
            return;
        }

        if(this._close_ == child)
        {
            this._close_ = null;
            return;
        }

        if(this._closeXslt_ == child)
        {
            this._closeXslt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._xsltTag_ == oldChild)
        {
            setXsltTag((TXsltTag) newChild);
            return;
        }

        if(this._open_ == oldChild)
        {
            setOpen((TApplyTemplates) newChild);
            return;
        }

        if(this._applyTemplatesOptions_ == oldChild)
        {
            setApplyTemplatesOptions((PApplyTemplatesOptions) newChild);
            return;
        }

        if(this._closeApplyTemplates_ == oldChild)
        {
            setCloseApplyTemplates((TCloseTag) newChild);
            return;
        }

        if(this._applyTemplatesParameters_ == oldChild)
        {
            setApplyTemplatesParameters((PApplyTemplatesParameters) newChild);
            return;
        }

        if(this._closeXsltTag_ == oldChild)
        {
            setCloseXsltTag((TCloseXsltTag) newChild);
            return;
        }

        if(this._close_ == oldChild)
        {
            setClose((TApplyTemplates) newChild);
            return;
        }

        if(this._closeXslt_ == oldChild)
        {
            setCloseXslt((TCloseTag) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
