/* This file was generated by SableCC (http://www.sablecc.org/). */

package xslt.node;

import xslt.analysis.*;

@SuppressWarnings("nls")
public final class AHeader extends PHeader
{
    private TXsltTag _xsltTag_;
    private TStyle _style_;
    private TVersion _version_;
    private TEqual _equal_;
    private TVersionOption _versionOption_;
    private TXmlns _xmlns_;
    private TColon _colon_;
    private TXslUrl _xslUrl_;
    private TXmlnsUrl _xmlnsUrl_;
    private TCloseTag _closeTag_;
    private PSetOutput _setOutput_;

    public AHeader()
    {
        // Constructor
    }

    public AHeader(
        @SuppressWarnings("hiding") TXsltTag _xsltTag_,
        @SuppressWarnings("hiding") TStyle _style_,
        @SuppressWarnings("hiding") TVersion _version_,
        @SuppressWarnings("hiding") TEqual _equal_,
        @SuppressWarnings("hiding") TVersionOption _versionOption_,
        @SuppressWarnings("hiding") TXmlns _xmlns_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") TXslUrl _xslUrl_,
        @SuppressWarnings("hiding") TXmlnsUrl _xmlnsUrl_,
        @SuppressWarnings("hiding") TCloseTag _closeTag_,
        @SuppressWarnings("hiding") PSetOutput _setOutput_)
    {
        // Constructor
        setXsltTag(_xsltTag_);

        setStyle(_style_);

        setVersion(_version_);

        setEqual(_equal_);

        setVersionOption(_versionOption_);

        setXmlns(_xmlns_);

        setColon(_colon_);

        setXslUrl(_xslUrl_);

        setXmlnsUrl(_xmlnsUrl_);

        setCloseTag(_closeTag_);

        setSetOutput(_setOutput_);

    }

    @Override
    public Object clone()
    {
        return new AHeader(
            cloneNode(this._xsltTag_),
            cloneNode(this._style_),
            cloneNode(this._version_),
            cloneNode(this._equal_),
            cloneNode(this._versionOption_),
            cloneNode(this._xmlns_),
            cloneNode(this._colon_),
            cloneNode(this._xslUrl_),
            cloneNode(this._xmlnsUrl_),
            cloneNode(this._closeTag_),
            cloneNode(this._setOutput_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHeader(this);
    }

    public TXsltTag getXsltTag()
    {
        return this._xsltTag_;
    }

    public void setXsltTag(TXsltTag node)
    {
        if(this._xsltTag_ != null)
        {
            this._xsltTag_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xsltTag_ = node;
    }

    public TStyle getStyle()
    {
        return this._style_;
    }

    public void setStyle(TStyle node)
    {
        if(this._style_ != null)
        {
            this._style_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._style_ = node;
    }

    public TVersion getVersion()
    {
        return this._version_;
    }

    public void setVersion(TVersion node)
    {
        if(this._version_ != null)
        {
            this._version_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._version_ = node;
    }

    public TEqual getEqual()
    {
        return this._equal_;
    }

    public void setEqual(TEqual node)
    {
        if(this._equal_ != null)
        {
            this._equal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._equal_ = node;
    }

    public TVersionOption getVersionOption()
    {
        return this._versionOption_;
    }

    public void setVersionOption(TVersionOption node)
    {
        if(this._versionOption_ != null)
        {
            this._versionOption_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._versionOption_ = node;
    }

    public TXmlns getXmlns()
    {
        return this._xmlns_;
    }

    public void setXmlns(TXmlns node)
    {
        if(this._xmlns_ != null)
        {
            this._xmlns_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xmlns_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public TXslUrl getXslUrl()
    {
        return this._xslUrl_;
    }

    public void setXslUrl(TXslUrl node)
    {
        if(this._xslUrl_ != null)
        {
            this._xslUrl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xslUrl_ = node;
    }

    public TXmlnsUrl getXmlnsUrl()
    {
        return this._xmlnsUrl_;
    }

    public void setXmlnsUrl(TXmlnsUrl node)
    {
        if(this._xmlnsUrl_ != null)
        {
            this._xmlnsUrl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xmlnsUrl_ = node;
    }

    public TCloseTag getCloseTag()
    {
        return this._closeTag_;
    }

    public void setCloseTag(TCloseTag node)
    {
        if(this._closeTag_ != null)
        {
            this._closeTag_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._closeTag_ = node;
    }

    public PSetOutput getSetOutput()
    {
        return this._setOutput_;
    }

    public void setSetOutput(PSetOutput node)
    {
        if(this._setOutput_ != null)
        {
            this._setOutput_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._setOutput_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._xsltTag_)
            + toString(this._style_)
            + toString(this._version_)
            + toString(this._equal_)
            + toString(this._versionOption_)
            + toString(this._xmlns_)
            + toString(this._colon_)
            + toString(this._xslUrl_)
            + toString(this._xmlnsUrl_)
            + toString(this._closeTag_)
            + toString(this._setOutput_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._xsltTag_ == child)
        {
            this._xsltTag_ = null;
            return;
        }

        if(this._style_ == child)
        {
            this._style_ = null;
            return;
        }

        if(this._version_ == child)
        {
            this._version_ = null;
            return;
        }

        if(this._equal_ == child)
        {
            this._equal_ = null;
            return;
        }

        if(this._versionOption_ == child)
        {
            this._versionOption_ = null;
            return;
        }

        if(this._xmlns_ == child)
        {
            this._xmlns_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._xslUrl_ == child)
        {
            this._xslUrl_ = null;
            return;
        }

        if(this._xmlnsUrl_ == child)
        {
            this._xmlnsUrl_ = null;
            return;
        }

        if(this._closeTag_ == child)
        {
            this._closeTag_ = null;
            return;
        }

        if(this._setOutput_ == child)
        {
            this._setOutput_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._xsltTag_ == oldChild)
        {
            setXsltTag((TXsltTag) newChild);
            return;
        }

        if(this._style_ == oldChild)
        {
            setStyle((TStyle) newChild);
            return;
        }

        if(this._version_ == oldChild)
        {
            setVersion((TVersion) newChild);
            return;
        }

        if(this._equal_ == oldChild)
        {
            setEqual((TEqual) newChild);
            return;
        }

        if(this._versionOption_ == oldChild)
        {
            setVersionOption((TVersionOption) newChild);
            return;
        }

        if(this._xmlns_ == oldChild)
        {
            setXmlns((TXmlns) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._xslUrl_ == oldChild)
        {
            setXslUrl((TXslUrl) newChild);
            return;
        }

        if(this._xmlnsUrl_ == oldChild)
        {
            setXmlnsUrl((TXmlnsUrl) newChild);
            return;
        }

        if(this._closeTag_ == oldChild)
        {
            setCloseTag((TCloseTag) newChild);
            return;
        }

        if(this._setOutput_ == oldChild)
        {
            setSetOutput((PSetOutput) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
