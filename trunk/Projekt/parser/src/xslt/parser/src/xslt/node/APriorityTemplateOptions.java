/* This file was generated by SableCC (http://www.sablecc.org/). */

package xslt.node;

import xslt.analysis.*;

@SuppressWarnings("nls")
public final class APriorityTemplateOptions extends PTemplateOptions
{
    private TPriority _priority_;
    private TEqual _equal_;
    private TDigits _digits_;

    public APriorityTemplateOptions()
    {
        // Constructor
    }

    public APriorityTemplateOptions(
        @SuppressWarnings("hiding") TPriority _priority_,
        @SuppressWarnings("hiding") TEqual _equal_,
        @SuppressWarnings("hiding") TDigits _digits_)
    {
        // Constructor
        setPriority(_priority_);

        setEqual(_equal_);

        setDigits(_digits_);

    }

    @Override
    public Object clone()
    {
        return new APriorityTemplateOptions(
            cloneNode(this._priority_),
            cloneNode(this._equal_),
            cloneNode(this._digits_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPriorityTemplateOptions(this);
    }

    public TPriority getPriority()
    {
        return this._priority_;
    }

    public void setPriority(TPriority node)
    {
        if(this._priority_ != null)
        {
            this._priority_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._priority_ = node;
    }

    public TEqual getEqual()
    {
        return this._equal_;
    }

    public void setEqual(TEqual node)
    {
        if(this._equal_ != null)
        {
            this._equal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._equal_ = node;
    }

    public TDigits getDigits()
    {
        return this._digits_;
    }

    public void setDigits(TDigits node)
    {
        if(this._digits_ != null)
        {
            this._digits_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._digits_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._priority_)
            + toString(this._equal_)
            + toString(this._digits_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._priority_ == child)
        {
            this._priority_ = null;
            return;
        }

        if(this._equal_ == child)
        {
            this._equal_ = null;
            return;
        }

        if(this._digits_ == child)
        {
            this._digits_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._priority_ == oldChild)
        {
            setPriority((TPriority) newChild);
            return;
        }

        if(this._equal_ == oldChild)
        {
            setEqual((TEqual) newChild);
            return;
        }

        if(this._digits_ == oldChild)
        {
            setDigits((TDigits) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
