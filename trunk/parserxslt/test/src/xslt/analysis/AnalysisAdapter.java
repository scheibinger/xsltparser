/* This file was generated by SableCC (http://www.sablecc.org/). */

package xslt.analysis;

import java.util.*;
import xslt.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAFile(AFile node)
    {
        defaultCase(node);
    }

    public void caseAFooter(AFooter node)
    {
        defaultCase(node);
    }

    public void caseAHeader(AHeader node)
    {
        defaultCase(node);
    }

    public void caseASetOutput(ASetOutput node)
    {
        defaultCase(node);
    }

    public void caseASingleOutputOptions(ASingleOutputOptions node)
    {
        defaultCase(node);
    }

    public void caseAMultipleOutputOptions(AMultipleOutputOptions node)
    {
        defaultCase(node);
    }

    public void caseAMethodXmlOutputOption(AMethodXmlOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAMethodHtmlOutputOption(AMethodHtmlOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAMethodTextOutputOption(AMethodTextOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAVersionOutputOption(AVersionOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAEncodingOutputOption(AEncodingOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAOmitXmlDeclarationYesOutputOption(AOmitXmlDeclarationYesOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAOmitXmlDeclarationNoOutputOption(AOmitXmlDeclarationNoOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAStandaloneYesOutputOption(AStandaloneYesOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAStandaloneNoOutputOption(AStandaloneNoOutputOption node)
    {
        defaultCase(node);
    }

    public void caseADoctypePublicOutputOption(ADoctypePublicOutputOption node)
    {
        defaultCase(node);
    }

    public void caseADoctypeSystemOutputOption(ADoctypeSystemOutputOption node)
    {
        defaultCase(node);
    }

    public void caseACdataSectionElementsOutputOption(ACdataSectionElementsOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAIndentYesOutputOption(AIndentYesOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAIndentNoOutputOption(AIndentNoOutputOption node)
    {
        defaultCase(node);
    }

    public void caseAMediaTypeOutputOption(AMediaTypeOutputOption node)
    {
        defaultCase(node);
    }

    public void caseADocument(ADocument node)
    {
        defaultCase(node);
    }

    public void caseASingleImports(ASingleImports node)
    {
        defaultCase(node);
    }

    public void caseAMultipleImports(AMultipleImports node)
    {
        defaultCase(node);
    }

    public void caseAImportImportElement(AImportImportElement node)
    {
        defaultCase(node);
    }

    public void caseAIncludeImportElement(AIncludeImportElement node)
    {
        defaultCase(node);
    }

    public void caseASingleInnerElements(ASingleInnerElements node)
    {
        defaultCase(node);
    }

    public void caseAMultipleInnerElements(AMultipleInnerElements node)
    {
        defaultCase(node);
    }

    public void caseAParamInnerElement(AParamInnerElement node)
    {
        defaultCase(node);
    }

    public void caseAVariableInnerElement(AVariableInnerElement node)
    {
        defaultCase(node);
    }

    public void caseAAttributeInnerElement(AAttributeInnerElement node)
    {
        defaultCase(node);
    }

    public void caseATemplateInnerElement(ATemplateInnerElement node)
    {
        defaultCase(node);
    }

    public void caseASingleAttributes(ASingleAttributes node)
    {
        defaultCase(node);
    }

    public void caseAMultipleAttributes(AMultipleAttributes node)
    {
        defaultCase(node);
    }

    public void caseAAttributeElement(AAttributeElement node)
    {
        defaultCase(node);
    }

    public void caseAMatchTemplateElement(AMatchTemplateElement node)
    {
        defaultCase(node);
    }

    public void caseANameTemplateElement(ANameTemplateElement node)
    {
        defaultCase(node);
    }

    public void caseAModeTemplateOptions(AModeTemplateOptions node)
    {
        defaultCase(node);
    }

    public void caseAPriorityTemplateOptions(APriorityTemplateOptions node)
    {
        defaultCase(node);
    }

    public void caseAApplyImportsTemplateContent(AApplyImportsTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAApplyTemplatesTemplateContent(AApplyTemplatesTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAAttributeTemplateContent(AAttributeTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseACallTemplateTemplateContent(ACallTemplateTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAChooseTemplateContent(AChooseTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseACommentTemplateContent(ACommentTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseACopyTemplateContent(ACopyTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseACopyOfTemplateContent(ACopyOfTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAElementTemplateContent(AElementTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAFallbackTemplateContent(AFallbackTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAForEachTemplateContent(AForEachTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAIfTemplateContent(AIfTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAValueOfTemplateContent(AValueOfTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAParamTemplateContent(AParamTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAVariableTemplateContent(AVariableTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseAPassthruTemplateContent(APassthruTemplateContent node)
    {
        defaultCase(node);
    }

    public void caseASelectApplyTemplatesOptions(ASelectApplyTemplatesOptions node)
    {
        defaultCase(node);
    }

    public void caseAModeApplyTemplatesOptions(AModeApplyTemplatesOptions node)
    {
        defaultCase(node);
    }

    public void caseAParameterApplyTemplatesParameters(AParameterApplyTemplatesParameters node)
    {
        defaultCase(node);
    }

    public void caseASortingApplyTemplatesParameters(ASortingApplyTemplatesParameters node)
    {
        defaultCase(node);
    }

    public void caseASorting(ASorting node)
    {
        defaultCase(node);
    }

    public void caseASelectSortOptions(ASelectSortOptions node)
    {
        defaultCase(node);
    }

    public void caseAOrderAscSortOptions(AOrderAscSortOptions node)
    {
        defaultCase(node);
    }

    public void caseAOrderDescSortOptions(AOrderDescSortOptions node)
    {
        defaultCase(node);
    }

    public void caseACaseOrderUpperSortOptions(ACaseOrderUpperSortOptions node)
    {
        defaultCase(node);
    }

    public void caseACaseOrderLoweaSortOptions(ACaseOrderLoweaSortOptions node)
    {
        defaultCase(node);
    }

    public void caseALangSortOptions(ALangSortOptions node)
    {
        defaultCase(node);
    }

    public void caseADataTypeTextSortOptions(ADataTypeTextSortOptions node)
    {
        defaultCase(node);
    }

    public void caseADataTypeNumberSortOptions(ADataTypeNumberSortOptions node)
    {
        defaultCase(node);
    }

    public void caseAParameter(AParameter node)
    {
        defaultCase(node);
    }

    public void caseASingleTests(ASingleTests node)
    {
        defaultCase(node);
    }

    public void caseAMultipleTests(AMultipleTests node)
    {
        defaultCase(node);
    }

    public void caseATestElement(ATestElement node)
    {
        defaultCase(node);
    }

    public void caseAText(AText node)
    {
        defaultCase(node);
    }

    public void caseTSign(TSign node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    public void caseTAmpersand(TAmpersand node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTCaret(TCaret node)
    {
        defaultCase(node);
    }

    public void caseTTilde(TTilde node)
    {
        defaultCase(node);
    }

    public void caseTBar(TBar node)
    {
        defaultCase(node);
    }

    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    public void caseTOpenTag(TOpenTag node)
    {
        defaultCase(node);
    }

    public void caseTCloseTag(TCloseTag node)
    {
        defaultCase(node);
    }

    public void caseTCloseTagRange(TCloseTagRange node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTXml(TXml node)
    {
        defaultCase(node);
    }

    public void caseTHtml(THtml node)
    {
        defaultCase(node);
    }

    public void caseTTextFormat(TTextFormat node)
    {
        defaultCase(node);
    }

    public void caseTHref(THref node)
    {
        defaultCase(node);
    }

    public void caseTYes(TYes node)
    {
        defaultCase(node);
    }

    public void caseTNo(TNo node)
    {
        defaultCase(node);
    }

    public void caseTStyle(TStyle node)
    {
        defaultCase(node);
    }

    public void caseTXsltTag(TXsltTag node)
    {
        defaultCase(node);
    }

    public void caseTCloseXsltTag(TCloseXsltTag node)
    {
        defaultCase(node);
    }

    public void caseTVersion(TVersion node)
    {
        defaultCase(node);
    }

    public void caseTVersionOption(TVersionOption node)
    {
        defaultCase(node);
    }

    public void caseTXmlns(TXmlns node)
    {
        defaultCase(node);
    }

    public void caseTXslUrl(TXslUrl node)
    {
        defaultCase(node);
    }

    public void caseTXmlnsUrl(TXmlnsUrl node)
    {
        defaultCase(node);
    }

    public void caseTOutput(TOutput node)
    {
        defaultCase(node);
    }

    public void caseTMethod(TMethod node)
    {
        defaultCase(node);
    }

    public void caseTEncoding(TEncoding node)
    {
        defaultCase(node);
    }

    public void caseTOmitXmlDeclaration(TOmitXmlDeclaration node)
    {
        defaultCase(node);
    }

    public void caseTStandalone(TStandalone node)
    {
        defaultCase(node);
    }

    public void caseTDoctypePublic(TDoctypePublic node)
    {
        defaultCase(node);
    }

    public void caseTDoctypeSystem(TDoctypeSystem node)
    {
        defaultCase(node);
    }

    public void caseTCdataSectionElements(TCdataSectionElements node)
    {
        defaultCase(node);
    }

    public void caseTIndent(TIndent node)
    {
        defaultCase(node);
    }

    public void caseTMediaType(TMediaType node)
    {
        defaultCase(node);
    }

    public void caseTImport(TImport node)
    {
        defaultCase(node);
    }

    public void caseTInclude(TInclude node)
    {
        defaultCase(node);
    }

    public void caseTName(TName node)
    {
        defaultCase(node);
    }

    public void caseTSelect(TSelect node)
    {
        defaultCase(node);
    }

    public void caseTParam(TParam node)
    {
        defaultCase(node);
    }

    public void caseTVariable(TVariable node)
    {
        defaultCase(node);
    }

    public void caseTMatch(TMatch node)
    {
        defaultCase(node);
    }

    public void caseTTemplate(TTemplate node)
    {
        defaultCase(node);
    }

    public void caseTMode(TMode node)
    {
        defaultCase(node);
    }

    public void caseTPriority(TPriority node)
    {
        defaultCase(node);
    }

    public void caseTApplyTemplates(TApplyTemplates node)
    {
        defaultCase(node);
    }

    public void caseTApplyImports(TApplyImports node)
    {
        defaultCase(node);
    }

    public void caseTCallTemplate(TCallTemplate node)
    {
        defaultCase(node);
    }

    public void caseTChoose(TChoose node)
    {
        defaultCase(node);
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseTCopy(TCopy node)
    {
        defaultCase(node);
    }

    public void caseTCopyOf(TCopyOf node)
    {
        defaultCase(node);
    }

    public void caseTElement(TElement node)
    {
        defaultCase(node);
    }

    public void caseTForEach(TForEach node)
    {
        defaultCase(node);
    }

    public void caseTFallback(TFallback node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTMessage(TMessage node)
    {
        defaultCase(node);
    }

    public void caseTTerminate(TTerminate node)
    {
        defaultCase(node);
    }

    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    public void caseTProcessingInstruction(TProcessingInstruction node)
    {
        defaultCase(node);
    }

    public void caseTDisableOutputEscaping(TDisableOutputEscaping node)
    {
        defaultCase(node);
    }

    public void caseTValueOf(TValueOf node)
    {
        defaultCase(node);
    }

    public void caseTSort(TSort node)
    {
        defaultCase(node);
    }

    public void caseTOrder(TOrder node)
    {
        defaultCase(node);
    }

    public void caseTAscending(TAscending node)
    {
        defaultCase(node);
    }

    public void caseTDescending(TDescending node)
    {
        defaultCase(node);
    }

    public void caseTCaseOrder(TCaseOrder node)
    {
        defaultCase(node);
    }

    public void caseTUpperFirst(TUpperFirst node)
    {
        defaultCase(node);
    }

    public void caseTLowerFirst(TLowerFirst node)
    {
        defaultCase(node);
    }

    public void caseTLang(TLang node)
    {
        defaultCase(node);
    }

    public void caseTDataType(TDataType node)
    {
        defaultCase(node);
    }

    public void caseTWithParam(TWithParam node)
    {
        defaultCase(node);
    }

    public void caseTAttribute(TAttribute node)
    {
        defaultCase(node);
    }

    public void caseTWhen(TWhen node)
    {
        defaultCase(node);
    }

    public void caseTTest(TTest node)
    {
        defaultCase(node);
    }

    public void caseTNamespace(TNamespace node)
    {
        defaultCase(node);
    }

    public void caseTCount(TCount node)
    {
        defaultCase(node);
    }

    public void caseTLevel(TLevel node)
    {
        defaultCase(node);
    }

    public void caseTSingle(TSingle node)
    {
        defaultCase(node);
    }

    public void caseTMultiple(TMultiple node)
    {
        defaultCase(node);
    }

    public void caseTAny(TAny node)
    {
        defaultCase(node);
    }

    public void caseTFrom(TFrom node)
    {
        defaultCase(node);
    }

    public void caseTValue(TValue node)
    {
        defaultCase(node);
    }

    public void caseTFormat(TFormat node)
    {
        defaultCase(node);
    }

    public void caseTLetterValue(TLetterValue node)
    {
        defaultCase(node);
    }

    public void caseTAlphabetic(TAlphabetic node)
    {
        defaultCase(node);
    }

    public void caseTTraditional(TTraditional node)
    {
        defaultCase(node);
    }

    public void caseTGroupingSeparator(TGroupingSeparator node)
    {
        defaultCase(node);
    }

    public void caseTGroupingSize(TGroupingSize node)
    {
        defaultCase(node);
    }

    public void caseTAttributeSet(TAttributeSet node)
    {
        defaultCase(node);
    }

    public void caseTTextToPass(TTextToPass node)
    {
        defaultCase(node);
    }

    public void caseTDigits(TDigits node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
