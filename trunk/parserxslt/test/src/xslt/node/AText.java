/* This file was generated by SableCC (http://www.sablecc.org/). */

package xslt.node;

import xslt.analysis.*;

@SuppressWarnings("nls")
public final class AText extends PText
{
    private TTextToPass _textToPass_;

    public AText()
    {
        // Constructor
    }

    public AText(
        @SuppressWarnings("hiding") TTextToPass _textToPass_)
    {
        // Constructor
        setTextToPass(_textToPass_);

    }

    @Override
    public Object clone()
    {
        return new AText(
            cloneNode(this._textToPass_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAText(this);
    }

    public TTextToPass getTextToPass()
    {
        return this._textToPass_;
    }

    public void setTextToPass(TTextToPass node)
    {
        if(this._textToPass_ != null)
        {
            this._textToPass_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._textToPass_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._textToPass_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._textToPass_ == child)
        {
            this._textToPass_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._textToPass_ == oldChild)
        {
            setTextToPass((TTextToPass) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
