/* This file was generated by SableCC (http://www.sablecc.org/). */

package xslt.node;

import xslt.analysis.*;

@SuppressWarnings("nls")
public final class AApplyImportsTemplateContent extends PTemplateContent
{
    private TXsltTag _xsltTag_;
    private TApplyImports _applyImports_;
    private TCloseTag _closeTag_;

    public AApplyImportsTemplateContent()
    {
        // Constructor
    }

    public AApplyImportsTemplateContent(
        @SuppressWarnings("hiding") TXsltTag _xsltTag_,
        @SuppressWarnings("hiding") TApplyImports _applyImports_,
        @SuppressWarnings("hiding") TCloseTag _closeTag_)
    {
        // Constructor
        setXsltTag(_xsltTag_);

        setApplyImports(_applyImports_);

        setCloseTag(_closeTag_);

    }

    @Override
    public Object clone()
    {
        return new AApplyImportsTemplateContent(
            cloneNode(this._xsltTag_),
            cloneNode(this._applyImports_),
            cloneNode(this._closeTag_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAApplyImportsTemplateContent(this);
    }

    public TXsltTag getXsltTag()
    {
        return this._xsltTag_;
    }

    public void setXsltTag(TXsltTag node)
    {
        if(this._xsltTag_ != null)
        {
            this._xsltTag_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xsltTag_ = node;
    }

    public TApplyImports getApplyImports()
    {
        return this._applyImports_;
    }

    public void setApplyImports(TApplyImports node)
    {
        if(this._applyImports_ != null)
        {
            this._applyImports_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._applyImports_ = node;
    }

    public TCloseTag getCloseTag()
    {
        return this._closeTag_;
    }

    public void setCloseTag(TCloseTag node)
    {
        if(this._closeTag_ != null)
        {
            this._closeTag_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._closeTag_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._xsltTag_)
            + toString(this._applyImports_)
            + toString(this._closeTag_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._xsltTag_ == child)
        {
            this._xsltTag_ = null;
            return;
        }

        if(this._applyImports_ == child)
        {
            this._applyImports_ = null;
            return;
        }

        if(this._closeTag_ == child)
        {
            this._closeTag_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._xsltTag_ == oldChild)
        {
            setXsltTag((TXsltTag) newChild);
            return;
        }

        if(this._applyImports_ == oldChild)
        {
            setApplyImports((TApplyImports) newChild);
            return;
        }

        if(this._closeTag_ == oldChild)
        {
            setCloseTag((TCloseTag) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
